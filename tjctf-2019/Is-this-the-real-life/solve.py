nlist = [42798447, 60070844, 64372735, 50740679, 96064802, 42258424, 44356317, 77336984]
ct = [292296909762800, 215653060477940, 208434519524352, 292296909762800, 265338299876870, 338411113077906, 217961079953287, 344375715089844, 205288667438400, 16912457697000, 11315622010000, 341537164927645, 314135413320574, 169124576970000, 32145056144756, 344375715089844, 15964193777715, 292296909762800, 344375715089844, 388451782884159, 16912457697000, 26533829987687, 344375715089844, 150925396356060, 281783803794437, 87154851154764, 398222847250224]

# nlist の各整数は10^8程度
# len(nm) は高々8
# nm は高々10^8
# nlist[i] * len(nm) * nm <<<< 2**512
# よってmodulusは関係ない
# cipher = [0]*len(flag)
# for c in range(len(flag)):
#     nm = str(int(bin(int(flag[c].encode('hex'),16)).replace('0b', '')))
#     for b in range(len(nm)):
#         cipher[c] += int(nm[b])*nlist[b]
#     cipher[c] = cipher[c]*int(nm)

for c in ct:
    for nm in range(1, ord('}') + 1):
        nm = str(bin(nm).replace('0b', ''))
        s = 0
        for b in range(len(nm)):
            s += int(nm[b]) * nlist[b]
        if c % s == 0 and (c // s) == int(nm):
            print(chr(int(nm, 2)), end='')
print()
